#include <Arduino.h>

// —— Pin Definitions ——
const byte Pot_PIN    = A0;
const byte PWM_PIN    = 10;
const byte DIR_PIN    = 51;
const byte ENC_A_PIN  = 2;
const byte ENC_B_PIN  = 3;

// —— Configuration ——
const int   DEAD_ZONE      = 20;      // ±20 around 512
const float STEPS_PER_REV  = 100.0;   // 25 slots × 4 edges
const float MAX_RPM        = 1000.0;  // clamp limit
const int   SMOOTH_COUNT   = 5;       // moving average window

// —— State Variables ——
volatile unsigned long lastEdgeTime = 0;
volatile float rpmInstant = 0;
float rpmHistory[SMOOTH_COUNT] = {0};
uint8_t rpmIdx = 0;

void setup() {
  Serial.begin(9600);
  
  pinMode(Pot_PIN, INPUT);
  pinMode(PWM_PIN, OUTPUT);
  pinMode(DIR_PIN, OUTPUT);
  pinMode(ENC_A_PIN, INPUT_PULLUP);
  pinMode(ENC_B_PIN, INPUT_PULLUP);
  
  // Attach interrupts on both channels
  attachInterrupt(digitalPinToInterrupt(ENC_A_PIN), onEncoder, CHANGE);
  attachInterrupt(digitalPinToInterrupt(ENC_B_PIN), onEncoder, CHANGE);
}

void loop() {
  // 1) Read pot, compute PWM & direction
  int pot = analogRead(Pot_PIN);         // 0–1023
  int delta = pot - 512;
  byte pwm = 0;
  int dirState = 0;  // -1=REV, 0=STOP, 1=FWD

  if (abs(delta) > DEAD_ZONE) {
    pwm = map(abs(delta), DEAD_ZONE, 511, 0, 255);
    dirState = (delta > 0) ? 1 : -1;
  }
  
  digitalWrite(DIR_PIN, dirState > 0 ? HIGH : LOW);
  analogWrite(PWM_PIN, pwm);

  // 2) Compute smoothed RPM
  rpmHistory[rpmIdx] = rpmInstant;
  rpmIdx = (rpmIdx + 1) % SMOOTH_COUNT;
  float rpmSum = 0;
  for (int i = 0; i < SMOOTH_COUNT; i++) rpmSum += rpmHistory[i];
  float rpmSmoothed = rpmSum / SMOOTH_COUNT;
  rpmSmoothed = constrain(rpmSmoothed, 0, MAX_RPM);

  // 3) Print results
  static unsigned long lastPrint = 0;
  if (millis() - lastPrint >= 200) {
    Serial.print("Pot=");      Serial.print(pot);
    Serial.print(" | PWM=");    Serial.print(pwm);
    Serial.print(" | Dir=");
      if      (dirState>0)  Serial.print("FWD");
      else if (dirState<0)  Serial.print("REV");
      else                  Serial.print("STOP");
    Serial.print(" | RPM=");    Serial.println(rpmSmoothed, 1);
    lastPrint = millis();
  }
}

// —— ISR: Edge Timing for Instant RPM ——
void onEncoder() {
  unsigned long now = micros();
  unsigned long dt = now - lastEdgeTime;
  if (dt > 0) {
    // pulses per second = 1e6 / dt
    // RPM = (pulses/sec / steps_per_rev) * 60
    rpmInstant = (1e6 / float(dt)) / STEPS_PER_REV * 60.0;
  }
  lastEdgeTime = now;
}
